name: Upload Test Coverage
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-report-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Send coverage report to application
        env:
          API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
          API_KEY: ${{ secrets.WEBHOOK_SECRET }}
          REPO_ID: ${{ github.repository_id }}
          REPO_NAME: ${{ github.repository }}
          COMMIT_SHA: ${{ github.sha }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          # Just use the coverage-final.json file directly
          COVERAGE_FILE="coverage/coverage-final.json"
          
          # Create payload with minimal processing
          PAYLOAD=$(cat <<EOF
          {
            "repository_id": "$REPO_ID",
            "repository_name": "$REPO_NAME",
            "commit": "$COMMIT_SHA",
            "branch": "$BRANCH_NAME", 
            "coverage_report": $(cat $COVERAGE_FILE)
          }
          EOF
          )
          
          # Send the coverage report to the API endpoint
          curl -s \
            -X POST "$API_ENDPOINT" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $API_KEY" \
            -d "$PAYLOAD" || echo "Failed to send coverage report"